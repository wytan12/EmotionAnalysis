services:
  nginx:
    image: nginx:latest
    container_name: emotion_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Custom Nginx config
    #   - ./EmotionFrontend/dist/browser:/usr/share/nginx/html
    ports:
      - "80:80" # Expose Nginx on port 80
    depends_on:
      - frontend
      - backend
      - form
    networks:
      - app-network
    restart: always

  frontend:
    build: ./EmotionFrontend
    container_name: emotion_frontend
    # refer src/assets/config.json
    # environment:
    #   BASE_URL: http://localhost
    #   API_URL: http://localhost/api
    #   COMMUNITY_DATA_URL: http://localhost/api/community-data/community-id/${communityId}
    #   FORM_URL: http://localhost/form
    restart: always
    ports:
      - "4200:80"
    # expose:
    #   - "80"  # Map port 4200 to Nginx
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./EmotionBackend
    container_name: emotion_backend
    environment:
      MONGO_URI: mongodb://liang:luya@mongo:27017/Emotion?retryWrites=true&w=majority
      API_HOST: https://kf6.rdc.nie.edu.sg/api/analytics/emotions/note-emotions/community-id
      RDC_USERNAME: gaoxiazhu
      RDC_PASSWORD: Testemotionanalytics
    ports:
      - "3000:3000"
    # expose:
    #   - "3000"
    depends_on:
      - mongo
    networks:
      - app-network

  form:
    build: ./ReportEmotionForm
    container_name: emotion_form
    # refer src/assets/config.json
    # environment:
    #   BASE_URL: http://localhost
    #   API_URL: http://localhost/api
    restart: always
    ports:
      - "60312:80"
    # expose:
    #   - "80"  # Map port 80 to Nginx
    # ports:
    #   - "60312:80"
    depends_on:
      - backend
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    # ports:
    #   - "27017:27017"  # MongoDB default port
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: liangluya
      MONGO_INITDB_DATABASE: Emotion
    volumes:
      - ./mongo-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - app-network

# volumes:
#   mongo-data:  # Persistent storage for MongoDB

networks:
  app-network:
    driver: bridge
